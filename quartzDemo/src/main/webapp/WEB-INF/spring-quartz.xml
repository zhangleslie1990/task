<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns="http://www.springframework.org/schema/beans"
       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd">

    <bean id="scheduler" class="org.springframework.scheduling.quartz.SchedulerFactoryBean">
        <property name="jobFactory">
            <bean class="AutowiringSpringBeanJobFactory"/>
        </property>
        <!--  <property name="dataSource">
              <ref bean="dataSource" />
          </property>-->
        <property name="quartzProperties">
            <props>
                <prop key="org.quartz.scheduler.instanceName">qingshi-Scheduler</prop>
                <prop key="org.quartz.scheduler.instanceId">AUTO</prop>
                <prop key="org.quartz.threadPool.class">org.quartz.simpl.SimpleThreadPool</prop>
                <prop key="org.quartz.threadPool.threadCount">20</prop>
                <prop key="org.quartz.threadPool.threadPriority">5</prop>
                <prop key="org.quartz.jobStore.misfireThreshold">60000</prop>
                <prop key="org.quartz.jobStore.class">org.quartz.impl.jdbcjobstore.JobStoreTX</prop>
                <prop key="org.quartz.jobStore.driverDelegateClass">org.quartz.impl.jdbcjobstore.StdJDBCDelegate</prop>
                <!--<prop key="org.quartz.jobStore.selectWithLockSQL">SELECT * FROM {0}LOCKS UPDLOCK WHERE LOCK_NAME = ?</prop>-->
                <prop key="org.quartz.jobStore.tablePrefix">qrtz_</prop>
                <prop key="org.quartz.jobStore.isClustered">false</prop>
                <!--<prop key="org.quartz.jobStore.clusterCheckinInterval">20000</prop>-->
            </props>
        </property>
        <property name="applicationContextSchedulerContextKey" value="applicationContextKey"/>
        <property name="autoStartup" value="true"/>
    </bean>

    <!-- 调度工厂 -->
    <bean name="startQuartz" lazy-init="false" autowire="no"
          class="org.springframework.scheduling.quartz.SchedulerFactoryBean">
        <property name="triggers">
            <list>
                <ref bean="nightRepay"></ref>
            </list>
        </property>
        <property name="quartzProperties">
            <props>
                <!-- 主要是这个参数 -->
                <prop key="org.quartz.scheduler.skipUpdateCheck">false</prop>
            </props>
        </property>
    </bean>


    <!--&lt;!&ndash;定时划扣 ，时间为每天晚10:30         start&ndash;&gt;-->
    <bean id="nightRepay" class="org.springframework.scheduling.quartz.CronTriggerFactoryBean">
        <property name="jobDetail" ref="nightRepayDetail">
        </property>
        <property name="cronExpression">
            <value>0/2 * * * * ?</value>
        </property>
    </bean>

    <bean id="nightRepayDetail"
          class="org.springframework.scheduling.quartz.MethodInvokingJobDetailFactoryBean">
        <property name="targetObject" ref="withholdOfNormal2">
        </property>
        <property name="targetMethod" value="realRepay"></property>
        <property name="concurrent" value="false"/>
        <!-- 是否允许任务并发执行。当值为false时，表示必须等到前一个线程处理完毕后才再启一个新的线程 -->
    </bean>

    <bean id="withholdOfNormal2" class="quartz.WithholdOfNormal">
    </bean>

    <!--&lt;!&ndash;定时划扣          end&ndash;&gt;-->
</beans>