<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:tx="http://www.springframework.org/schema/tx"
       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.2.xsd
   http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-3.2.xsd">

    <!-- 基于Druid数据库链接池的数据源配置 -->
    <bean id="dataSource" class="com.alibaba.druid.pool.DruidDataSource"
          init-method="init" destroy-method="close">
        <!-- 基本属性driverClassName、 url、user、password -->
        <property name="driverClassName" value="com.mysql.jdbc.Driver"/>
        <property name="url"
                  value="jdbc:mysql://localhost:3306/qingshi?useUnicode=true&amp;characterEncoding=utf-8&amp;allowMultiQueries=true"/>
        <property name="username" value="zhangli"/>
        <property name="password" value="zhangli"/>
        <!-- 配置初始化大小、最小、最大 -->
        <!-- 通常来说，只需要修改initialSize、minIdle、maxActive -->
        <property name="testWhileIdle" value="true"/>

        <!-- 配置获取连接等待超时的时间 -->
        <property name="maxWait" value="5000"/>
        <!-- 配置一个连接在池中最小生存的时间，单位是毫秒 -->
        <property name="minEvictableIdleTimeMillis" value="30000"/>
        <!-- 配置间隔多久才进行一次检测，检测需要关闭的空闲连接，单位是毫秒 -->
        <property name="timeBetweenEvictionRunsMillis" value="60000"/>
        <property name="validationQuery" value="SELECT 'x'"/>
        <!-- 解密密码必须要配置的项 -->
        <property name="filters" value="stat,config,log4j"/>
        <property name="connectionProperties" value="spring.decrypt=false"/>
    </bean>
    <!-- 将数据源映射到sqlSessionFactory中 -->
    <bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
        <property name="configLocation" value="classpath:WEB-INF/mybatis-config.xml"/>
        <property name="dataSource" ref="dataSource"/>
        <!-- 自动扫描entity目录, 省掉Configuration.xml里的手工配置 -->
        <property name="typeAliasesPackage" value="com.zw.rule.po,com.zw.rule.engine.po"/>
        <!-- 显式指定Mapper文件位置 -->
        <property name="mapperLocations">
            <list>
                <!-- <value>classpath*:/mybatis/common-mapper/CommonMapper.xml</value>-->
                <value>classpath:/mapper/demoMapper.xml</value>
                <!--<value>classpath:/mapper/*.xml</value>-->
            </list>
        </property>
        <!-- MyBatis分页插件配置 -->
        <!-- <property name="plugins">
             <array>
                 <bean class="com.github.pagehelper.PageHelper">
                     <property name="properties">
                         <props>
                             <prop key="dialect">mysql</prop>
                             <prop key="offsetAsPageNum">true</prop>
                             <prop key="rowBoundsWithCount">true</prop>
                         </props>
                     </property>
                 </bean>
             </array>
         </property>-->
    </bean>

    <!-- 扫描basePackage下所有以@MyBatisRepository标识的 接口 -->
    <bean id="mapperScannerConfigurer" class="org.mybatis.spring.mapper.MapperScannerConfigurer">
        <property name="basePackage" value="com.zw.rule.mapper"/>
        <property name="sqlSessionFactoryBeanName" value="sqlSessionFactory"/>
    </bean>

    <!--======= 事务配置 Begin ================= -->
    <!-- 事务管理器（由Spring管理MyBatis的事务） -->
    <bean id="transactionManager"
          class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
        <!-- 关联数据源 -->
        <property name="dataSource" ref="dataSource"></property>
    </bean>

    <!-- 注解方式配置事物 -->
    <tx:annotation-driven transaction-manager="transactionManager"/>
    <!--======= 事务配置 End =================== -->

    <bean id="sqlSessionTemplate" class="org.mybatis.spring.SqlSessionTemplate">
        <constructor-arg ref="sqlSessionFactory"/>
    </bean>

    <bean id="daoSupport" class="daobase.DaoSupportImpl">
        <constructor-arg ref="sqlSessionTemplate"/>
    </bean>
</beans>